{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlfor","TextForm","useState","text","settext","style","color","heading","name","value","onChange","event","target","background","cols","rows","newtext","toUpperCase","showAlert","toLowerCase","split","length","prototype","PropTypes","string","abouttext","defaultProps","Alerts","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b48e6a1f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-a\" href=\"#\">{props.abouttext}</a>\r\n              </li> */}\r\n\r\n\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\r\n              {/* <button className=\"btn btn-warning\" type=\"submit\">Search</button> */}\r\n            {/* </form> */} \r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string,\r\n  abouttext: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"Set Title\",\r\n  abouttext: \"Set About Us Here\"\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    }\r\n    \r\n    const handleClear = ()=>{\r\n        let newtext = '';\r\n        settext(newtext);\r\n        props.showAlert(\"Cleared text\", \"success\");\r\n    }\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        settext(event.target.value);\r\n    }\r\n    const [text, settext] = useState(\"Enter text here\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea name=\"form-control\" value = {text} onChange={handleOnChange} style={{background:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} id=\"my-box\" cols=\"150\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-success mx-2\" onClick= {handleUpClick}>Convert To Upper Case</button>\r\n            <button className=\"btn btn-danger mx-2\" onClick= {handleLoClick}>Convert To Lower Case</button>\r\n            <button className=\"btn btn-info mx-2\" onClick= {handleClear}>Clear Text</button>\r\n           \r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p> It will take approx  {0.008 * text.split(\" \").length}  minutes to read </p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import './App.css';\n// import About from './components/About'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\nimport Alerts from './components/Alerts'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\"\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabeled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743'  //#042743\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n\n\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text-Changer\" abouttext=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alerts alert={alert} />\n      <div className=\"container\">\n      {/* <Switch>\n        <Route path=\"/about\"> */}\n          {/* <About /> */}\n        {/* </Route>\n        <Route path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading={\"Enter the text to analyse below\"} mode={mode} />\n\n        {/* </Route>\n       \n      </Switch> */}\n      \n    </div >\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}